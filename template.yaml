AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  getAds:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getAdsV2
      Description: API to advertisements for the given metadata
      Handler: index.handler
      Runtime: nodejs10.x
      Timeout: 60
      CodeUri: ./
      Role: !GetAtt getAdsFnRoleV2.Arn
      Tracing: Active
      Layers:
        - arn:aws:lambda:us-east-1:891956057524:layer:s3-dependencies:2
      Environment:
        Variables:
          GET_METADATA_HOST: '{{resolve:ssm:GET_METADATA_HOST:1}}'
          IDEALFEEDS_KEY: '{{resolve:ssm:IDEALFEEDS_KEY:1}}'
      Events:
        photos:
          Type: Api
          Properties:
            Path: /ads
            RequestParameters:
              - method.request.querystring.fileName:
                  Required: true
            Method: get
            RestApiId: !Ref adsApi
    DependsOn:
    - getAdsFnRoleV2
  adsApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: adsV2
      StageName: prod
      TracingEnabled: true
      Cors:
        AllowOrigin: "'*'"
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0"
          title: "adsV2"        
        basePath: "/prod"
        schemes:
        - "https"
        paths:
          /ads:
            get:
              parameters:
              - name: "fileName"
                in: "query"
                required: true
                type: "string"
              responses: {}
            options:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
  getAdsFnRoleV2:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement: 
          - Effect: Allow
            Principal:
              Service:
              - 'lambda.amazonaws.com'
            Action: 
              - 'sts:AssumeRole'
      Policies:
      - PolicyName: digigallery-xray-lambda-policy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Action:
            - "xray:PutTraceSegments"
            - "xray:PutTelemetryRecords"
            Effect: Allow
            Resource: "*"